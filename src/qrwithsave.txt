// Generation of QR Code in React Native
// https://aboutreact.com/generation-of-qr-code-in-react-native/

// import React in our code
import React, {useState, useRef,useEffect} from 'react';

// import all the components we are going to use
import {
  SafeAreaView,
  Text,
  View,
  StyleSheet,
  TextInput,
  TouchableOpacity,
  Alert,
} from 'react-native';
import RNFS from 'react-native-fs';
import QRCode from 'react-native-qrcode-svg';
import RNFetchBlob from 'rn-fetch-blob';
import ViewShot from 'react-native-view-shot';
import Share from 'react-native-share';
import { PermissionsAndroid } from 'react-native';

const App = () => {
  const [inputText, setInputText] = useState('');
  const [qrvalue, setQrvalue] = useState('');
  let myQRCode = useRef();
  const viewRef = useRef();

  const shareQRCode = () => {
    myQRCode.toDataURL((dataURL) => {
      console.log(dataURL);
      let shareImageBase64 = {
        title: 'React Native',
        url: `data:image/png;base64,${dataURL}`,
        subject: 'Share Link', //  for email
      };
      Share.share(shareImageBase64).catch((error) => console.log(error));
    });
  };
 
  const handleSaveImage = async () => {
    try {
      const uri = await viewRef.current.capture();
      const path = RNFetchBlob.fs.dirs.DCIMDir + '/qrcode.png';
      await RNFetchBlob.fs.writeFile(path, uri, 'base64');
      if (Platform.OS === 'android') {
        await RNFetchBlob.fs.scanFile([{ path }]);
      }
      Alert.alert('Success', 'QR code image saved to the device!');
    } catch (error) {
      Alert.alert('Error', 'Failed to save QR code image.');
    }
  };

  useEffect(() => {
    requestExternalStoragePermission();
  }, []);
  
  const requestExternalStoragePermission = async () => {
    try {
      const granted = await PermissionsAndroid.request(
        PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE,
        {
          title: 'External Storage Permission',
          message: 'The app needs access to your external storage to save images.',
          buttonPositive: 'OK',
        },
      );
      if (granted === PermissionsAndroid.RESULTS.GRANTED) {
        console.log('External storage permission granted');
      } else {
        console.log('External storage permission denied');
      }
    } catch (err) {
      console.warn(err);
    }
  };
  return (
    <SafeAreaView style={{flex: 1}}>
      <View style={styles.container}>
        <Text style={styles.titleStyle}>
         Generate QR
        </Text>
        <TextInput
          style={styles.textInputStyle}
          onChangeText={(inputText) => setInputText(inputText)}
          placeholder="Enter Any Value"
          value={inputText}
        />
        <ViewShot ref={viewRef}>
        <QRCode 
          getRef={(ref) => (myQRCode = ref)}
          // ref={myQRCode}
          //QR code value
          value={qrvalue ? qrvalue : 'NA'}
          //size of QR Code
          size={250}
          //Color of the QR Code (Optional)
          color="black"
          //Background Color of the QR Code (Optional)
          backgroundColor="white"
          //Center Logo size  (Optional)
          logoSize={30}
          //Center Logo margin (Optional)
          logoMargin={2}
          //Center Logo radius (Optional)
          logoBorderRadius={15}
          //Center Logo background (Optional)
          logoBackgroundColor="white"
          logo={require('./assets/ddx.png')}
        />
        </ViewShot>
        <TouchableOpacity
          style={styles.buttonStyle}
          onPress={() => setQrvalue(inputText)}>
          <Text style={styles.buttonTextStyle}>
            Generate QR Code
          </Text>
        </TouchableOpacity>
        <View style={styles.row}>
        <TouchableOpacity
          style={styles.Button}
          onPress={shareQRCode}>
          <Text style={styles.buttonTextStyle}>
            Share QR 
          </Text>
        </TouchableOpacity>
        <TouchableOpacity
          style={styles.Button}
          onPress={handleSaveImage}>
          <Text style={styles.buttonTextStyle}>
            Save QR
          </Text>
        </TouchableOpacity>
        </View>
      </View>
    </SafeAreaView>
  );
};
export default App;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'white',
    justifyContent: 'center',
    alignItems: 'center',
    textAlign: 'center',
    padding: 10,
  },
  titleStyle: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  textStyle: {
    textAlign: 'center',
    margin: 10,
  },
  textInputStyle: {
    paddingVertical: 10,
    paddingHorizontal: 15,
    textAlign: 'center',
    marginRight: 5,
    marginVertical: 20,
    borderRadius: 20,
    width: 320,
    borderWidth: 1,
    borderStyle: 'solid',
  },
  buttonStyle: {
    backgroundColor: 'deepskyblue',
   marginTop: 32,
   marginRight: 5,
   paddingVertical: 10,
   paddingHorizontal: 35,
   borderRadius: 20,
   paddingBottom: 17,
  },
  buttonTextStyle: {
    color: '#FFFFFF',
    paddingVertical: 10,
    fontSize: 16,
  },
  Button: {
    backgroundColor: 'deepskyblue',
    marginTop: 32,
    marginRight: 10,
    marginLeft:-5,
    paddingVertical: 10,
    paddingHorizontal: 35,
    borderRadius: 20,
    paddingBottom: 17,
   },
   row: {
    flexDirection: 'row',
    marginTop: 10,
    marginLeft:20,
    },
});